## Problem 26:
## # Prerequisite: Understand creating tables in SQL / collections in MongoDB
## # Problem: Create a `Rides` table / collection with the fields defined above.
CREATE TABLE Rides (
    id INT PRIMARY KEY AUTO_INCREMENT,
    driver_id INT,
    passenger_id INT,
    start_location VARCHAR(255),
    end_location VARCHAR(255),
    distance DECIMAL(5,2),
    ride_time DECIMAL(5,2),
    fare DECIMAL(6,2)
);

## Problem 27:
## # Prerequisite: Understand inserting data into SQL tables / MongoDB collections
## # Problem: Insert five rows / documents into the `Rides` table / collection with data of your choice.
insert into rides (driver_id,passenger_id, start_location, end_location,distance,ride_time,fare)
values (1,2,"sagar","downtown",1.3,20,40.1);
insert into rides (driver_id,passenger_id, start_location, end_location,distance,ride_time,fare)
values (1,1,"damoh","rewa",2,40,60);
insert into rides (driver_id,passenger_id, start_location, end_location,distance,ride_time,fare)
values (2,3,"downtown","sagar",1.3,20,40.1);
insert into rides (driver_id,passenger_id, start_location, end_location,distance,ride_time,fare)
values (3,4,"rewa","damoh",2,40,60);
insert into rides (driver_id,passenger_id, start_location, end_location,distance,ride_time,fare)
values (4,5,"indore","bhopal",10,50,210.10);



## Problem 28:
## # Prerequisite: Understand how to order data in SQL / MongoDB
## # Problem: Write a query to fetch all rides, ordered by `fare` in descending order.
select * from rides
order by fare desc; 

## Problem 29:
## # Prerequisite: Understand using math operations in SQL / MongoDB
## # Problem: Write a query to calculate the total `distance` and total `fare` for all rides.
select sum(distance) as distance_sum, sum(fare) as fare_sum
from rides;


## Problem 30:
## # Prerequisite: Understand how to use the AVG function in SQL / MongoDB's aggregate functions
## # Problem: Write a query to calculate the average `ride_time` of all rides.
select avg(ride_time) as ride_time
from rides;

## Problem 31:
## # Prerequisite: Understand using string patterns in SQL (LIKE clause) / using regex in MongoDB
## # Problem: Write a query to fetch all rides whose `start_location` or `end_location` contains 'Downtown'.
select * from rides
where start_location like "%downtown" or end_location like "%downtown%";


## Problem 32:
## # Prerequisite: Understand how to use the COUNT function in SQL / MongoDB's aggregate functions
## # Problem: Write a query to count the number of rides for a given `driver_id`.
select count(*) as driver_count
from rides
where driver_id=1;


## Problem 33:
## # Prerequisite: Understand data updating in SQL / MongoDB
## # Problem: Write a query to update the `fare` of the ride with `id` 4.
update rides
set fare = 50
where id = 4;

## Problem 34:
## # Prerequisite: Understand using GROUP BY in SQL / MongoDB's aggregate functions
## # Problem: Write a query to calculate the total `fare` for each `driver_id`.
select driver_id, sum(fare) from rides
group by driver_id;

## Problem 35:
## # Prerequisite: Understand data deletion in SQL / MongoDB
## # Problem: Write a query to delete the ride with `id` 2.
delete from rides 
where id = 2;